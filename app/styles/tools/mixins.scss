/* stylelint-disable */

/// @param {Length} $item-size - Single item size
@mixin on-circle($item-count, $circle-size, $item-size) {
  position: relative;
  width:  $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%; 
  list-style: none;       

  > * {
    display: block;
    position: absolute;
    top:  50%; 
    left: 50%;
    width: $item-size;
    height: $item-size;
    margin: -($item-size / 2);

    $angle: (360 / $item-count);
    $rot: 0;

    @for $i from 1 through $item-count {
      &:nth-of-type(#{$i}) {
        transform: 
          rotate($rot * 1deg) 
          translate($circle-size / 2) 
          rotate($rot * -1deg);
      }

      $rot: $rot + $angle;
    }
  }
}

@mixin box-shadow($depth) {
    box-shadow: 0 #{2 * $depth}px #{4 * $depth}px rgba(black, 0.1 * $depth);
}

// Media-Queries
$on-mobile:        768px;
$on-tablet:        1024px;
$on-laptop:        1500px;

@mixin media($max-width) {
    @media screen and (max-width: $max-width) {
        @content;
    }
}

@mixin scrollbar($thumbColor, $trackColor, $trackWidth) {
    &::-webkit-scrollbar { width: $trackWidth; }

    &::-webkit-scrollbar-track { background-color: $trackColor; }

    &::-webkit-scrollbar-thumb {
        border-radius: $trackWidth / 2;
        background-color: $thumbColor;
    }
}

@mixin triangle($direction, $size, $color) {
    width: 0;
    height: 0;
    border-width: $size;
    border-style: solid;
    border-color: transparent;

    @if $direction == 'top' {
        border-bottom-color: $color;
    } @else if $direction == 'bottom' {
        border-top-color: $color;
    } @else if $direction == 'right' {
        border-left-color: $color;
    } @else if $direction == 'left' {
        border-right-color: $color;
    }
}
